# -----------------------------------------------------------------
# Dic 자료형 살펴보기
# - 컨테이너 타입 중 매핑 타입 => key:value
# - 형식 : {key : value, key : value, ....}
# - 특징 : key로 value를 찾음! 인덱스 필요 없음!!
# -----------------------------------------------------------------

## dict 객체 생성
d1 = {}
d2 = {'name':'홍길동', 'age': 10}
d3 = {'jumsu':[90, 99, 100], 'rank' : 10}
d4 = {'jumsu':{'국어' : 90, '수학' : 92, '미술': 100}, 'score':(90,100)}
## type에러 why? 키 값은 변경이 불가해야함, 튜플은 가능
# d5 = {['유진', '남자'] : 90, ['유진', '여자']: 90} ## 리스트는 키 불가
d5 = {('유진', '남자') : 90, ('유진', '여자'): 90}


print(f'd1 => {type(d1)}, {len(d1)}개, {d1}')
print(f'd2 => {type(d2)}, {len(d2)}개, {d2}')
print(f'd3 => {type(d3)}, {len(d3)}개, {d3}')
print(f'd4 => {type(d4)}, {len(d4)}개, {d4}')
print(f'd5 => {type(d5)}, {len(d5)}개, {d5}')

# -----------------------------------------------------------------
# dict 원소/요소 읽기 => 객체변수명[ key ]
# -----------------------------------------------------------------

## d2의 age 값 읽기
print("age : ",d2['age'])

## d3의 점수값 읽기
print(f'점수 : {d3["jumsu"]}')

## d5의 (유진, 여) 값 일기
print(f'(유진, 여)  : {d5[("유진", "여자")]}') ## 키 값은 완전히 일치되어야 함