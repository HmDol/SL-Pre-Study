# ----------------------------------------------------------
# str 타입의 문자열 포맷/서식 지정
# - f-string의 { 포맷/서식 }
# - format() 메서드
# ----------------------------------------------------------

## 총 자릿수 지정 : {변수명:칸수}
print(f'오늘은 좋은날 {2025}!!')
print(f'오늘은 좋은날 {2025:10}!!') # 10칸 공간에 오른쪽 정렬
print(f'오늘은 좋은날 {2025:2}!!') # 데이터 자릿수 보다 적으면 무시



## 정렬 : {변수명 : 정렬기호 칸수} ex) {변수명 : <}, {변수명 : ^}, {변수명 : >}
print(f'오늘은 좋은날 {2025:>10}!!') # 기본값, 오른쪽 정렬
print(f'오늘은 좋은날 {2025:^10}!!') # 중앙 정렬
print(f'오늘은 좋은날 {2025:<10}!!') # 왼쪽 정렬

## 공백처리 문자 : {변수명:공백처리문자 정렬기호 칸수}
print(f'오늘은 좋은날 {2025:>10}!!') # 기본값, 오른쪽 정렬, 공백
print(f'오늘은 좋은날 {2025:->10}!!') # 오른쪽 정렬, 공백 = '-'
print(f'오늘은 좋은날 {2025:@^10}!!') # 가운데 정렬, 공백 = '@
print(f'오늘은 좋은날 {2025:-^7}!!') 

print(f'image_{1:0>4}.jpg') # 최대 이미지 장수 1000장 0001.jpt ~ 1000.jpg
print(f'image_{981:0>4}.jpg')
print(f'image_{1000:0>4}.jpg')

## 실수 자릿수 처리 => {변수명 : 공백처리문자 정렬기호 칸수.소수점이하자리숫f}
#                  => 데이터 + . + 소수점수 = 전체 칸수 (.도 한자리수임)  
print(f'avg : {9.99999999999}')
print(f'avg : {9.99999999999:5.3f}')
print(f'avg : {1.1121212212111:5.3f}')


